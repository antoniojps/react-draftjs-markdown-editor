{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { useCallback, useState } from 'react';\nimport useAsync from './useAsync';\n\nvar useAsyncRetry = function useAsyncRetry(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var _a = useState(0),\n      attempt = _a[0],\n      setAttempt = _a[1];\n\n  var state = useAsync(fn, __spreadArrays(deps, [attempt]));\n  var stateLoading = state.loading;\n  var retry = useCallback(function () {\n    if (stateLoading) {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('You are calling useAsyncRetry hook retry() method while loading in progress, this is a no-op.');\n      }\n\n      return;\n    }\n\n    setAttempt(function (currentAttempt) {\n      return currentAttempt + 1;\n    });\n  }, __spreadArrays(deps, [stateLoading]));\n  return __assign(__assign({}, state), {\n    retry: retry\n  });\n};\n\nexport default useAsyncRetry;","map":null,"metadata":{},"sourceType":"module"}