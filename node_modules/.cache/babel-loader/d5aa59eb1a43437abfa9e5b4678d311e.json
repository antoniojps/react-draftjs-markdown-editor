{"ast":null,"code":"import { useCallback, useRef, useState } from 'react';\nexport function useMediatedState(mediator, initialState) {\n  var mediatorFn = useRef(mediator);\n\n  var _a = useState(initialState),\n      state = _a[0],\n      setMediatedState = _a[1];\n\n  var setState = useCallback(function (newState) {\n    if (mediatorFn.current.length === 2) {\n      mediatorFn.current(newState, setMediatedState);\n    } else {\n      setMediatedState(mediatorFn.current(newState));\n    }\n  }, [state]);\n  return [state, setState];\n}","map":null,"metadata":{},"sourceType":"module"}