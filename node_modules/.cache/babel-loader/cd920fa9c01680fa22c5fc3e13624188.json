{"ast":null,"code":"var _jsxFileName = \"/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/AtomicBlock.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Warning = function Warning(props) {\n  return React.createElement(\"div\", {\n    style: {\n      padding: \"1rem\",\n      backgroundColor: \"red\"\n    },\n    onClick: function onClick() {\n      return console.log(\"clicked\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.children);\n};\n\nvar AtomicBlock = function AtomicBlock(_ref) {\n  var block = _ref.block,\n      contentState = _ref.contentState;\n  var entity = contentState.getEntity(block.getEntityAt(0));\n  var data = entity.getData();\n  var type = entity.getType();\n\n  switch (type) {\n    case \"WARNING\":\n      return React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, data);\n\n    default:\n      return \"Invalid AtomicBlock type\";\n  }\n};\n\nAtomicBlock.propTypes = {\n  block: PropTypes.shape({}).isRequired,\n  contentState: PropTypes.shape({}).isRequired\n};\nexport default AtomicBlock;","map":{"version":3,"sources":["/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/AtomicBlock.js"],"names":["React","PropTypes","Warning","props","padding","backgroundColor","console","log","children","AtomicBlock","block","contentState","entity","getEntity","getEntityAt","data","getData","type","getType","propTypes","shape","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,eAAe,EAAE;AAApC,KADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,KAAK,CAACK,QAJT,CADmB;AAAA,CAArB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC/C,MAAMC,MAAM,GAAGD,YAAY,CAACE,SAAb,CAAuBH,KAAK,CAACI,WAAN,CAAkB,CAAlB,CAAvB,CAAf;AACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,OAAP,EAAb;AACA,MAAMC,IAAI,GAAGL,MAAM,CAACM,OAAP,EAAb;;AAEA,UAAQD,IAAR;AACE,SAAK,SAAL;AACE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUF,IAAV,CAAP;;AACF;AACE,aAAO,0BAAP;AAJJ;AAMD,CAXD;;AAaAN,WAAW,CAACU,SAAZ,GAAwB;AACtBT,EAAAA,KAAK,EAAET,SAAS,CAACmB,KAAV,CAAgB,EAAhB,EAAoBC,UADL;AAEtBV,EAAAA,YAAY,EAAEV,SAAS,CAACmB,KAAV,CAAgB,EAAhB,EAAoBC;AAFZ,CAAxB;AAKA,eAAeZ,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Warning = props => (\n  <div\n    style={{ padding: \"1rem\", backgroundColor: \"red\" }}\n    onClick={() => console.log(\"clicked\")}\n  >\n    {props.children}\n  </div>\n);\n\nconst AtomicBlock = ({ block, contentState }) => {\n  const entity = contentState.getEntity(block.getEntityAt(0));\n  const data = entity.getData();\n  const type = entity.getType();\n\n  switch (type) {\n    case \"WARNING\":\n      return <Warning>{data}</Warning>;\n    default:\n      return \"Invalid AtomicBlock type\";\n  }\n};\n\nAtomicBlock.propTypes = {\n  block: PropTypes.shape({}).isRequired,\n  contentState: PropTypes.shape({}).isRequired\n};\n\nexport default AtomicBlock;\n"]},"metadata":{},"sourceType":"module"}