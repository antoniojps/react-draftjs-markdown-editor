{"ast":null,"code":"var _jsxFileName = \"/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/RichTextEditor.js\";\n\n/* eslint-disable no-unused-vars, no-console, react/prop-types, react/destructuring-assignment  */\n\n/* Page for testing functions, components... */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport AtomicBlock from \"./AtomicBlock\";\nimport ToolbarOption from \"./ToolbarOption\";\nimport toolbarOptions from \"./toolbarOptions\";\n\nvar blockRenderFunc = function blockRenderFunc(contentBlock) {\n  if (contentBlock.getType() !== \"atomic\") return null;\n  var entityId = contentBlock.getEntityAt(0);\n  return {\n    component: AtomicBlock,\n    editable: false\n  };\n};\n\nvar RichTextEditor = function RichTextEditor(_ref) {\n  var editorState = _ref.editorState,\n      onEditorStateChange = _ref.onEditorStateChange;\n  return React.createElement(Editor, {\n    editorState: editorState,\n    onEditorStateChange: onEditorStateChange,\n    wrapperClassName: \"editor\",\n    toolbar: toolbarOptions,\n    customBlockRenderFunc: blockRenderFunc,\n    toolbarCustomButtons: [React.createElement(ToolbarOption, {\n      onChange: onEditorStateChange,\n      editorState: editorState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nRichTextEditor.propTypes = {\n  editorState: PropTypes.shape({}),\n  onEditorStateChange: PropTypes.func\n};\nRichTextEditor.defaultProps = {\n  editorState: EditorState.createEmpty(),\n  onEditorStateChange: function onEditorStateChange() {\n    return null;\n  }\n};\nexport default RichTextEditor;","map":{"version":3,"sources":["/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/RichTextEditor.js"],"names":["React","PropTypes","Editor","EditorState","AtomicBlock","ToolbarOption","toolbarOptions","blockRenderFunc","contentBlock","getType","entityId","getEntityAt","component","editable","RichTextEditor","editorState","onEditorStateChange","propTypes","shape","func","defaultProps","createEmpty"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAO,kDAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,YAAY,EAAI;AACtC,MAAIA,YAAY,CAACC,OAAb,OAA2B,QAA/B,EAAyC,OAAO,IAAP;AAEzC,MAAMC,QAAQ,GAAGF,YAAY,CAACG,WAAb,CAAyB,CAAzB,CAAjB;AAEA,SAAO;AACLC,IAAAA,SAAS,EAAER,WADN;AAELS,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CATD;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,MAAgBC,mBAAhB,QAAgBA,mBAAhB;AAAA,SACrB,oBAAC,MAAD;AACE,IAAA,WAAW,EAAED,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,gBAAgB,EAAC,QAHnB;AAIE,IAAA,OAAO,EAAEV,cAJX;AAKE,IAAA,qBAAqB,EAAEC,eALzB;AAME,IAAA,oBAAoB,EAAE,CACpB,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAES,mBAAzB;AAA8C,MAAA,WAAW,EAAED,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB;AAAA,CAAvB;;AAaAD,cAAc,CAACG,SAAf,GAA2B;AACzBF,EAAAA,WAAW,EAAEd,SAAS,CAACiB,KAAV,CAAgB,EAAhB,CADY;AAEzBF,EAAAA,mBAAmB,EAAEf,SAAS,CAACkB;AAFN,CAA3B;AAKAL,cAAc,CAACM,YAAf,GAA8B;AAC5BL,EAAAA,WAAW,EAAEZ,WAAW,CAACkB,WAAZ,EADe;AAE5BL,EAAAA,mBAAmB,EAAE;AAAA,WAAM,IAAN;AAAA;AAFO,CAA9B;AAKA,eAAeF,cAAf","sourcesContent":["/* eslint-disable no-unused-vars, no-console, react/prop-types, react/destructuring-assignment  */\n/* Page for testing functions, components... */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport AtomicBlock from \"./AtomicBlock\";\nimport ToolbarOption from \"./ToolbarOption\";\n\nimport toolbarOptions from \"./toolbarOptions\";\n\nconst blockRenderFunc = contentBlock => {\n  if (contentBlock.getType() !== \"atomic\") return null;\n\n  const entityId = contentBlock.getEntityAt(0);\n\n  return {\n    component: AtomicBlock,\n    editable: false\n  };\n};\n\nconst RichTextEditor = ({ editorState, onEditorStateChange }) => (\n  <Editor\n    editorState={editorState}\n    onEditorStateChange={onEditorStateChange}\n    wrapperClassName=\"editor\"\n    toolbar={toolbarOptions}\n    customBlockRenderFunc={blockRenderFunc}\n    toolbarCustomButtons={[\n      <ToolbarOption onChange={onEditorStateChange} editorState={editorState} />\n    ]}\n  />\n);\n\nRichTextEditor.propTypes = {\n  editorState: PropTypes.shape({}),\n  onEditorStateChange: PropTypes.func\n};\n\nRichTextEditor.defaultProps = {\n  editorState: EditorState.createEmpty(),\n  onEditorStateChange: () => null\n};\n\nexport default RichTextEditor;\n"]},"metadata":{},"sourceType":"module"}