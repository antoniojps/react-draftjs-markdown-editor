{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\n\nvar useThrottle = function useThrottle(value, ms) {\n  if (ms === void 0) {\n    ms = 200;\n  }\n\n  var _a = useState(value),\n      state = _a[0],\n      setState = _a[1];\n\n  var timeout = useRef();\n  var nextValue = useRef(null);\n  var hasNextValue = useRef(0);\n  useEffect(function () {\n    if (!timeout.current) {\n      setState(value);\n\n      var timeoutCallback_1 = function timeoutCallback_1() {\n        if (hasNextValue.current) {\n          hasNextValue.current = false;\n          setState(nextValue.current);\n          timeout.current = setTimeout(timeoutCallback_1, ms);\n        } else {\n          timeout.current = undefined;\n        }\n      };\n\n      timeout.current = setTimeout(timeoutCallback_1, ms);\n    } else {\n      nextValue.current = value;\n      hasNextValue.current = true;\n    }\n  }, [value]);\n  useUnmount(function () {\n    timeout.current && clearTimeout(timeout.current);\n  });\n  return state;\n};\n\nexport default useThrottle;","map":null,"metadata":{},"sourceType":"module"}