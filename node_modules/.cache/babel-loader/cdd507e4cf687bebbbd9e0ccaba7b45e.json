{"ast":null,"code":"import _toConsumableArray from \"/Users/antoniojps/Documents/draftjs-markdown-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/AtomicBlock.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Warning = function Warning(props) {\n  return React.createElement(\"div\", {\n    style: {\n      padding: \"1rem\",\n      backgroundColor: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.children);\n};\n\nvar AtomicBlock = function AtomicBlock(_ref) {\n  var block = _ref.block,\n      contentState = _ref.contentState;\n  // const entity = contentState.getEntity(block.getEntityAt(0));\n  // const data = entity.getData();\n  // const type = entity.getType();\n  var data = block.getData();\n  console.log({\n    blockData: data,\n    data: _toConsumableArray(data.values)\n  });\n  var type = \"nope\";\n\n  switch (type) {\n    case \"WARNING\":\n      return React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, data);\n\n    default:\n      return \"Invalid AtomicBlock type\";\n  }\n};\n\nAtomicBlock.propTypes = {\n  block: PropTypes.shape({}).isRequired,\n  contentState: PropTypes.shape({}).isRequired\n};\nexport default AtomicBlock;","map":{"version":3,"sources":["/Users/antoniojps/Documents/draftjs-markdown-editor/src/RichTextEditor/AtomicBlock.js"],"names":["React","PropTypes","Warning","props","padding","backgroundColor","children","AtomicBlock","block","contentState","data","getData","console","log","blockData","values","type","propTypes","shape","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,eAAe,EAAE;AAApC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,KAAK,CAACG,QAHT,CADmB;AAAA,CAArB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC/C;AACA;AACA;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,OAAN,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,IAAAA,SAAS,EAAEJ,IAAZ;AAAkBA,IAAAA,IAAI,qBAAMA,IAAI,CAACK,MAAX;AAAtB,GAAZ;AACA,MAAMC,IAAI,GAAE,MAAZ;;AAEA,UAAQA,IAAR;AACE,SAAK,SAAL;AACE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUN,IAAV,CAAP;;AACF;AACE,aAAO,0BAAP;AAJJ;AAMD,CAdD;;AAgBAH,WAAW,CAACU,SAAZ,GAAwB;AACtBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,KAAV,CAAgB,EAAhB,EAAoBC,UADL;AAEtBV,EAAAA,YAAY,EAAER,SAAS,CAACiB,KAAV,CAAgB,EAAhB,EAAoBC;AAFZ,CAAxB;AAKA,eAAeZ,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Warning = props => (\n  <div\n    style={{ padding: \"1rem\", backgroundColor: \"red\" }}\n  >\n    {props.children}\n  </div>\n);\n\nconst AtomicBlock = ({ block, contentState }) => {\n  // const entity = contentState.getEntity(block.getEntityAt(0));\n  // const data = entity.getData();\n  // const type = entity.getType();\n  const data = block.getData()\n  console.log({blockData: data, data: [...data.values]})\n  const type= \"nope\"\n\n  switch (type) {\n    case \"WARNING\":\n      return <Warning>{data}</Warning>;\n    default:\n      return \"Invalid AtomicBlock type\";\n  }\n};\n\nAtomicBlock.propTypes = {\n  block: PropTypes.shape({}).isRequired,\n  contentState: PropTypes.shape({}).isRequired\n};\n\nexport default AtomicBlock;\n"]},"metadata":{},"sourceType":"module"}