{"ast":null,"code":"import { forwardRef, useRef, useEffect } from 'react';\nexport default function useEnsuredForwardedRef(forwardedRef) {\n  var ensuredRef = useRef(forwardedRef && forwardedRef.current);\n  useEffect(function () {\n    if (!forwardedRef) {\n      return;\n    }\n\n    forwardedRef.current = ensuredRef.current;\n  }, [forwardedRef]);\n  return ensuredRef;\n}\nexport function ensuredForwardRef(Component) {\n  return forwardRef(function (props, ref) {\n    var ensuredRef = useEnsuredForwardedRef(ref);\n    return Component(props, ensuredRef);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}