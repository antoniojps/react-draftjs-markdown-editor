{"ast":null,"code":"import { useRef } from 'react';\nimport useMount from './useMount';\nimport useSetState from './useSetState';\nvar voices = typeof window === 'object' && typeof window.speechSynthesis === 'object' ? window.speechSynthesis.getVoices() : [];\n\nvar useSpeech = function useSpeech(text, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _a = useSetState({\n    isPlaying: false,\n    lang: opts.lang || 'default',\n    voice: opts.voice || voices[0],\n    rate: opts.rate || 1,\n    pitch: opts.pitch || 1,\n    volume: opts.volume || 1\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var uterranceRef = useRef(null);\n  useMount(function () {\n    var utterance = new SpeechSynthesisUtterance(text);\n    opts.lang && (utterance.lang = opts.lang);\n    opts.voice && (utterance.voice = opts.voice);\n    utterance.rate = opts.rate || 1;\n    utterance.pitch = opts.pitch || 1;\n    utterance.volume = opts.volume || 1;\n\n    utterance.onstart = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onresume = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onend = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    utterance.onpause = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    uterranceRef.current = utterance;\n    window.speechSynthesis.speak(uterranceRef.current);\n  });\n  return state;\n};\n\nexport default useSpeech;","map":null,"metadata":{},"sourceType":"module"}