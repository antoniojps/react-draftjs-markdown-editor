{"ast":null,"code":"import { useEffect, useState } from 'react'; // kudos: https://usehooks.com/\n\nvar useHoverDirty = function useHoverDirty(ref, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n      console.error('useHoverDirty expects a single ref argument.');\n    }\n  }\n\n  var _a = useState(false),\n      value = _a[0],\n      setValue = _a[1];\n\n  useEffect(function () {\n    var onMouseOver = function onMouseOver() {\n      return setValue(true);\n    };\n\n    var onMouseOut = function onMouseOut() {\n      return setValue(false);\n    };\n\n    if (enabled && ref && ref.current) {\n      ref.current.addEventListener('mouseover', onMouseOver);\n      ref.current.addEventListener('mouseout', onMouseOut);\n    }\n\n    return function () {\n      if (enabled && ref && ref.current) {\n        ref.current.removeEventListener('mouseover', onMouseOver);\n        ref.current.removeEventListener('mouseout', onMouseOut);\n      }\n    };\n  }, [enabled, ref]);\n  return value;\n};\n\nexport default useHoverDirty;","map":null,"metadata":{},"sourceType":"module"}