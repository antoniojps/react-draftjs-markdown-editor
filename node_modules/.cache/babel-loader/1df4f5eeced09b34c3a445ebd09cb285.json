{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport function useMultiStateValidator(states, validator, initialValidity) {\n  if (initialValidity === void 0) {\n    initialValidity = [undefined];\n  }\n\n  if (typeof states !== 'object') {\n    throw new Error('states expected to be an object or array, got ' + typeof states);\n  }\n\n  var validatorInner = useRef(validator);\n  var statesInner = useRef(states);\n  validatorInner.current = validator;\n  statesInner.current = states;\n\n  var _a = useState(initialValidity),\n      validity = _a[0],\n      setValidity = _a[1];\n\n  var validate = useCallback(function () {\n    if (validatorInner.current.length >= 2) {\n      validatorInner.current(statesInner.current, setValidity);\n    } else {\n      setValidity(validatorInner.current(statesInner.current));\n    }\n  }, [setValidity]);\n  useEffect(function () {\n    validate();\n  }, Object.values(states));\n  return [validity, validate];\n}","map":null,"metadata":{},"sourceType":"module"}