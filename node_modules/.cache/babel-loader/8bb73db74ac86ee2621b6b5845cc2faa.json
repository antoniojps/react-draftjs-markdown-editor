{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\n\nvar useThrottleFn = function useThrottleFn(fn, ms, args) {\n  if (ms === void 0) {\n    ms = 200;\n  }\n\n  var _a = useState(null),\n      state = _a[0],\n      setState = _a[1];\n\n  var timeout = useRef();\n  var nextArgs = useRef();\n  useEffect(function () {\n    if (!timeout.current) {\n      setState(fn.apply(void 0, args));\n\n      var timeoutCallback_1 = function timeoutCallback_1() {\n        if (nextArgs.current) {\n          setState(fn.apply(void 0, nextArgs.current));\n          nextArgs.current = undefined;\n          timeout.current = setTimeout(timeoutCallback_1, ms);\n        } else {\n          timeout.current = undefined;\n        }\n      };\n\n      timeout.current = setTimeout(timeoutCallback_1, ms);\n    } else {\n      nextArgs.current = args;\n    }\n  }, args);\n  useUnmount(function () {\n    timeout.current && clearTimeout(timeout.current);\n  });\n  return state;\n};\n\nexport default useThrottleFn;","map":null,"metadata":{},"sourceType":"module"}