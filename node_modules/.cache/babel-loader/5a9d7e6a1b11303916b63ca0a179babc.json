{"ast":null,"code":"function cssToTree(tree, css, selector, prelude) {\n  var declarations = {};\n  var hasDeclarations = false;\n  var key, value;\n\n  for (key in css) {\n    value = css[key];\n\n    if (typeof value !== 'object') {\n      hasDeclarations = true;\n      declarations[key] = value;\n    }\n  }\n\n  if (hasDeclarations) {\n    if (!tree[prelude]) tree[prelude] = {};\n    tree[prelude][selector] = declarations;\n  }\n\n  for (key in css) {\n    value = css[key];\n\n    if (typeof value === 'object') {\n      if (key[0] === '@') {\n        cssToTree(tree, value, selector, key);\n      } else {\n        var hasCurrentSymbol = key.indexOf('&') > -1;\n        var selectorParts = selector.split(',');\n\n        if (hasCurrentSymbol) {\n          for (var i = 0; i < selectorParts.length; i++) {\n            selectorParts[i] = key.replace(/&/g, selectorParts[i]);\n          }\n        } else {\n          for (var i = 0; i < selectorParts.length; i++) {\n            selectorParts[i] = selectorParts[i] + ' ' + key;\n          }\n        }\n\n        cssToTree(tree, value, selectorParts.join(','), prelude);\n      }\n    }\n  }\n}\n\n;\nexports.cssToTree = cssToTree;","map":null,"metadata":{},"sourceType":"script"}